[{"D:\\Trabalho\\React\\smartinvest_ui\\src\\index.js":"1","D:\\Trabalho\\React\\smartinvest_ui\\src\\App.js":"2","D:\\Trabalho\\React\\smartinvest_ui\\src\\reportWebVitals.js":"3","D:\\Trabalho\\React\\smartinvest_ui\\src\\assets\\Assets.jsx":"4","D:\\Trabalho\\React\\smartinvest_ui\\src\\assets\\asset\\Asset.jsx":"5","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ChartComponent.jsx":"6","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\CandleStickChart.jsx":"7","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ParseData.jsx":"8","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\AssetSelector.jsx":"9","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\interactiveutils.js":"10","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ChartOptions\\ChartOptions.jsx":"11","D:\\Trabalho\\React\\smartinvest_ui\\src\\transactions\\Transactions.jsx":"12","D:\\Trabalho\\React\\smartinvest_ui\\src\\transactions\\Transaction.jsx":"13","D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTable.jsx":"14","D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableTitle\\CrudTableTitle.jsx":"15","D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableHeader\\CrudTableHeader.jsx":"16","D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudAddModal\\CrudAddModal.jsx":"17","D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableRow\\CrudTableRow.jsx":"18"},{"size":565,"mtime":1613863687044,"results":"19","hashOfConfig":"20"},{"size":597,"mtime":1614303831559,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1612112678107,"results":"22","hashOfConfig":"20"},{"size":2719,"mtime":1614309450686,"results":"23","hashOfConfig":"20"},{"size":1566,"mtime":1614308520935,"results":"24","hashOfConfig":"20"},{"size":2803,"mtime":1613863998225,"results":"25","hashOfConfig":"20"},{"size":9040,"mtime":1612239233703,"results":"26","hashOfConfig":"20"},{"size":1731,"mtime":1612144893615,"results":"27","hashOfConfig":"20"},{"size":1129,"mtime":1613865834957,"results":"28","hashOfConfig":"20"},{"size":1026,"mtime":1612112678097,"results":"29","hashOfConfig":"20"},{"size":1131,"mtime":1613865548021,"results":"30","hashOfConfig":"20"},{"size":3303,"mtime":1614306305016,"results":"31","hashOfConfig":"20"},{"size":1630,"mtime":1613865548021,"results":"32","hashOfConfig":"20"},{"size":2814,"mtime":1614308124181,"results":"33","hashOfConfig":"20"},{"size":1069,"mtime":1613863850963,"results":"34","hashOfConfig":"20"},{"size":1330,"mtime":1614307381665,"results":"35","hashOfConfig":"20"},{"size":6744,"mtime":1614310837835,"results":"36","hashOfConfig":"20"},{"size":2249,"mtime":1614307250554,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"7szlfc",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"D:\\Trabalho\\React\\smartinvest_ui\\src\\index.js",[],["84","85"],"D:\\Trabalho\\React\\smartinvest_ui\\src\\App.js",["86"],"import './App.css';\r\nimport Assets from './assets/Assets';\r\nimport ChartComponent from './charts/ChartComponent';\r\nimport Transactions from './transactions/Transactions';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"></link>\r\n      <Assets />\r\n      <Transactions/>\r\n      {/* <CrudAddModal show={true} itemType=\"Asset\" itemFields={[{\r\n                name: \"Code\",\r\n                type: \"text\",\r\n                isRequired: true\r\n            }\r\n        ]} /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n ","D:\\Trabalho\\React\\smartinvest_ui\\src\\reportWebVitals.js",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\assets\\Assets.jsx",["87"],"import React, { Component } from 'react';\r\nimport Asset from './asset/Asset';\r\nimport CrudTable from '../common/CrudTable/CrudTable';\r\n\r\nclass Assets extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.getCurrentAssetPrice = this.getCurrentAssetPrice.bind(this);\r\n    }\r\n    state = { \r\n        assets: [],\r\n        fields: [\r\n            {\r\n                name: \"id\",\r\n                label: \"ID\",\r\n                type: \"text\",\r\n                isInput: false,\r\n            },{\r\n                name: \"code\",\r\n                label: \"Code\",\r\n                type: \"text\",\r\n                isRequired: true\r\n            },{\r\n                name: \"price\",\r\n                label: \"Price\",\r\n                type: \"Float\",\r\n                isInput: false\r\n            }\r\n        ]\r\n    };\r\n\r\n    componentDidMount(){\r\n        fetch('http://localhost:8080/assets?page=0&size=10')\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n          this.setState({ assets: data.content })\r\n          console.log(`Assets loaded ${(data.content? data.content.length :\"\")}`)\r\n        })\r\n        .catch(console.log(\"Error loading assets!\"))\r\n    }\r\n\r\n    getCurrentAssetPrice(asset){\r\n        return fetch('https://54kwimgt6h.execute-api.sa-east-1.amazonaws.com/prod/quoter?code='+ asset.code,\r\n                    {\"headers\": {\"x-api-key\": process.env.REACT_APP_API_KEY_AWS}})\r\n        .then(res => res.json())\r\n        .then(price =>{\r\n            console.log(`${(asset? asset.code: \"\")} price loaded: ${price}`)\r\n            asset.price = price\r\n            return asset\r\n        })\r\n        .catch(e => {\r\n            console.log(\"error fetching price for asset\", asset.code)\r\n            return null\r\n        })\r\n        // return asset.price.promise\r\n        // this.setState({ price: \"12.34\" })\r\n    }\r\n\r\n    render() {        \r\n        let assets = this.state.assets \r\n        assets.forEach(a => {\r\n            if(!a.price)\r\n                a.price = null\r\n        })\r\n        \r\n        return ( \r\n            <section className=\"block_unit-5\" \r\n                style={{\"float\": \"left\", \"flex\" : \"0.5\"}}>\r\n                <CrudTable \r\n                    itemType={\"Asset\"}\r\n                    fields={this.state.fields}\r\n                    items={assets}\r\n                    itemUpdateHandler={this.getCurrentAssetPrice}\r\n                >\r\n                    {/* {this.state.assets.map((asset, i) =>{\r\n                        return (\r\n                            <Asset key={i} id={asset.id} code={asset.code} />\r\n                        );\r\n                    } )} */}\r\n                </CrudTable>\r\n            </section>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Assets;","D:\\Trabalho\\React\\smartinvest_ui\\src\\assets\\asset\\Asset.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ChartComponent.jsx",["88"],"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CandleStickChart from './CandleStickChart';\r\nimport { getData } from \"./ParseData\";\r\n\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nimport AssetSelector from './AssetSelector';\r\nimport ChartOptions from './ChartOptions/ChartOptions';\r\n\r\nclass ChartComponent extends React.Component {\r\n    state = {\r\n        indicators : {\r\n            \"ema10\" : true,\r\n            \"ema20\" : true} \r\n    };\r\n    constructor(props){\r\n        super(props)\r\n        this.assetSelectedEvent = this.assetSelectedEvent.bind(this);\r\n        this.toggleOption = this.toggleOption.bind(this);\r\n    }\r\n    \r\n    toggleOption(indicator, isChecked){\r\n        this.setState({\r\n            indicators : {\r\n                ...this.state.indicators,\r\n                [indicator] : isChecked} })\r\n\r\n    }\r\n\r\n\tcomponentDidMount() {\r\n        // if (this.state != null && this.state.assetCode != null)\r\n        //     getData(this.state.assetCode).then(assetData => {\r\n        //         this.setState({ \r\n        //             data: assetData.data})\r\n        //     });\r\n            // this.setState({data : getData()});\r\n\t}\r\n\trender() {\r\n\t\tif (this.state == null || this.state.data == null) {           \r\n\t\t\treturn (\r\n            <section>\r\n                <AssetSelector assetSelectedHandler={this.assetSelectedEvent}/>\r\n                <ChartOptions toggle={this.toggleOption} />\r\n                <div>{this.state.message}</div>\r\n            </section>\r\n            )\r\n        }\r\n\t\treturn (\r\n            <section>\r\n                <AssetSelector assetSelectedHandler={this.assetSelectedEvent} />\r\n                <ChartOptions toggle={this.toggleOption}  />\r\n                <div style={{\"clear\": \"both\"}}></div>\r\n                <h5 align=\"center\" style={{\"margin\": \"0\"}}> {this.state.assetCode} </h5>\r\n                <CandleStickChart type=\"hybrid\" data={this.state.data} indicators={this.state.indicators} />\r\n            </section>\r\n        )\r\n    }\r\n\r\n    assetSelectedEvent(newAssetCode){\r\n        this.setState({ assetCode: newAssetCode,\r\n                        data: null,\r\n                        message : ''});\r\n\r\n        getData(process.env.REACT_APP_API_KEY_ALPHA, newAssetCode).then(assetData => {\r\n            if(Object.keys(assetData).length === 0)\r\n                this.setState({ message: \"Error: Asset not found!\" });\r\n            else\r\n                this.setState({ \r\n                    data: assetData.data})\r\n        });\r\n        // ReactDOM.render(\r\n        //     <ChartComponent assetCode={this.state.assetCode}/>,\r\n        //         document.getElementById('chart')\r\n        // )\r\n    }\r\n}\r\n\r\nexport default ChartComponent;\r\n\r\nReactDOM.render(\r\n    <ChartComponent />,\r\n        document.getElementById('chart')\r\n)\r\n","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\CandleStickChart.jsx",["89","90","91","92","93","94","95","96","97"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { format } from \"d3-format\";\r\nimport { timeFormat } from \"d3-time-format\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries, LineSeries } from \"react-stockcharts/lib/series\";\r\nimport {MouseCoordinateY} from \"react-stockcharts/lib/coordinates\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last, head } from \"react-stockcharts/lib/utils\";\r\nimport CrossHairCursor from 'react-stockcharts/lib/coordinates/CrossHairCursor';\r\n//count only days with data on x axis\r\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\r\n\r\nimport MouseCoordinateX from 'react-stockcharts/lib/coordinates/MouseCoordinateX';\r\n\r\n//Y axis markers\r\nimport { InteractiveYCoordinate, InteractiveText, DrawingObjectSelector } from \"react-stockcharts/lib/interactive\";\r\nimport { getMorePropsForChart } from \"react-stockcharts/lib/interactive/utils\";\r\nimport {\r\n\tgetInteractiveNodes,\r\n} from \"./interactiveutils\";\r\n\r\n//exponential average\r\nimport { ema } from \"react-stockcharts/lib/indicator\";\r\n\r\nfunction round(number, precision = 0) {\r\n\tconst d = Math.pow(10, precision);\r\n\treturn Math.round(number * d) / d;\r\n}\r\n\r\n// const buy = {\r\n// \t...InteractiveYCoordinate.defaultProps.defaultPriceCoordinate,\r\n// \tstroke: \"#1F9D55\",\r\n// \ttextFill: \"#1F9D55\",\r\n// \ttext: \"Buy 120\",\r\n// \tedge: {\r\n// \t\t...InteractiveYCoordinate.defaultProps.defaultPriceCoordinate.edge,\r\n// \t\tstroke: \"#1F9D55\"\r\n// \t}\r\n// };\r\n\r\nclass CandleStickChart extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.getInteractiveNodes = getInteractiveNodes.bind(this);\r\n\r\n\t\tthis.handleChoosePosition = this.handleChoosePosition.bind(this);\r\n\t\tthis.handleChooseTextPosition = this.handleChooseTextPosition.bind(this);\r\n\t\tthis.onDrawComplete = this.onDrawComplete.bind(this);\r\n\t\tthis.handleSelection = this.handleSelection.bind(this);\t\t\r\n\r\n\t\tthis.state = {\r\n\t\t\tenableInteractiveObject: true,\r\n\t\t\tyCoordinateList: [],\r\n\t\t\ttextList: [],\r\n\t\t\tshowModal: false,\r\n\t\t\t\t// [{\r\n\t\t\t\t// \t...buy,\r\n\t\t\t\t// \tyValue: 160.90,\r\n\t\t\t\t// \tid: 1,\r\n\t\t\t\t// \tdraggable: false,\r\n\t\t\t\t// }]\r\n\t\t\tcomparingMarkersActive: 0\t\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst height = 400;\r\n\t\tconst { type, data: initialData, width, ratio } = this.props;\r\n\t\t\r\n\t\tconst margin = { left: 70, right: 70, top: 20, bottom: 30 };\r\n\r\n\t\tconst gridHeight = height - margin.top - margin.bottom;\r\n\t\tconst gridWidth = width - margin.left - margin.right;\r\n\r\n\t\tconst showGrid = true;\r\n\r\n\t\tconst candlesAppearance = {\r\n\t\t\tstroke: function stroke(d) { return d.close > d.open ? \"#6BA583\" : \"#DB0000\"},\r\n\t\t\twickStroke: function wickStroke(d) { return d.close > d.open ? \"#6BA583\" : \"#DB0000\"},\r\n\t\t\tfill: function fill(d) { return d.close > d.open ? \"#6BA583\" : \"#DB0000\"},\r\n\t\t\t// wickStroke: \"#000000\",\r\n\t\t\t// fill: function fill(d) {\r\n\t\t\t//   return d.close > d.open ? \"rgba(11, 196, 15, 0.8)\" : \"rgba(210, 11, 15, 0.8)\";\r\n\t\t\t// },\r\n\t\t\t// stroke: \"#000000\",\r\n\t\t\t// candleStrokeWidth: 1,\r\n\t\t\t// widthRatio: 0.8,\r\n\t\t\topacity: 0.7,\r\n\t\t}\r\n\r\n\t\tconst ema10 = ema()\r\n\t\t\t.id(1)\r\n\t\t\t.options({ windowSize: 10 })\r\n\t\t\t.merge((d, c) => {d.ema10 = c;})\r\n\t\t\t.accessor(d => d.ema10);\r\n\t\tema10(initialData);\r\n\r\n\t\tconst ema20 = ema()\r\n\t\t\t\t.id(2)\r\n\t\t\t\t.options({ windowSize: 20 })\r\n\t\t\t\t.merge((d, c) => {d.ema20 = c;})\r\n\t\t\t\t.accessor(d => d.ema20);\r\n\t\tema20(initialData);\r\n\t\tlet lineseriesEma10 = '';\r\n\t\tlet lineseriesEma20 = '';\r\n\t\tif(this.props.indicators[\"ema10\"]){\t\r\n\t\t\tlineseriesEma10 = <LineSeries yAccessor={ema10.accessor()} stroke={ema10.stroke()}/>\r\n\t\t}\r\n\t\tif(this.props.indicators[\"ema20\"]){\r\n\t\t\tlineseriesEma20 = <LineSeries yAccessor={ema20.accessor()} stroke={ema20.stroke()}/>\r\n\t\t}\r\n\r\n\r\n\t\tconst calculatedData = initialData;\r\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\r\n\t\t\t.inputDateAccessor(d => d.date);\r\n\t\tconst {\r\n\t\t\tdata,\r\n\t\t\txScale,\r\n\t\t\txAccessor,\r\n\t\t\tdisplayXAccessor,\r\n\t\t} = xScaleProvider(calculatedData);\r\n\r\n\t\t// const xAccessor = d => d.date;\r\n\t\tconst xExtents = [\r\n\t\t\txAccessor(last(data)),\r\n\t\t\txAccessor(data[Math.max(0, data.length - 100)])\r\n\t\t];\r\n\r\n\t\treturn (\r\n\t\t\t<ChartCanvas height={height}\t\t\t\t\r\n\t\t\t\t\twidth={width}\r\n\t\t\t\t\tratio={ratio}\r\n\t\t\t\t\tmargin={margin}\r\n\t\t\t\t\t//margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\txScale={xScale}\r\n\t\t\t\t\txAccessor={xAccessor}\r\n\t\t\t\t\tdisplayXAccessor={displayXAccessor}\r\n\t\t\t\t\txExtents={xExtents}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t<Chart id={1} \r\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema20.accessor(), ema10.accessor()]} \r\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n\t\t\t\t\t\r\n\t\t\t\t\t<MouseCoordinateX\r\n\t\t\t\t\t\tat=\"bottom\"\r\n\t\t\t\t\t\torient=\"bottom\"\r\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")} />\r\n\t\t\t\t\t<MouseCoordinateY\r\n\t\t\t\t\t\tat=\"right\"\r\n\t\t\t\t\t\torient=\"right\"\r\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")} />\r\n\r\n\t\t\t\t\t<CandlestickSeries {...candlesAppearance}/>\r\n\t\t\t\t\t{lineseriesEma10}\r\n\t\t\t\t\t{lineseriesEma20}\r\n\r\n\t\t\t\t\t<CrossHairCursor />\r\n\t\t\t\t\t<InteractiveYCoordinate\r\n\t\t\t\t\t\t\tyCoordinateList={this.state.yCoordinateList}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<InteractiveText\r\n\t\t\t\t\t\t\ttextList={this.state.textList}\r\n\t\t\t\t\t\t\tonDragComplete={this.onDrawComplete}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t</Chart>\r\n\t\t\t\t{/* to add new markers */}\r\n\t\t\t\t<DrawingObjectSelector\r\n\t\t\t\t\t\tenabled\r\n\t\t\t\t\t\tgetInteractiveNodes={this.getInteractiveNodes}\r\n\t\t\t\t\t\tdrawingObjectMap={{\r\n\t\t\t\t\t\t\tInteractiveYCoordinate: \"yCoordinateList\",\r\n\t\t\t\t\t\t\tInteractiveText: \"textList\"\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSelect={this.handleSelection}\r\n\t\t\t\t\t/>\r\n\t\t\t</ChartCanvas>\r\n\t\t);\r\n\t}\r\n\r\n\thandleSelection(interactives, moreProps, e) {\r\n\t\tif (this.state.enableInteractiveObject) {\r\n\t\t\tif(this.state.comparingMarkersActive > 1){\r\n\t\t\t\tthis.setState({ \r\n\t\t\t\t\tenableInteractiveObject: true,\r\n\t\t\t\t\tyCoordinateList: [],\r\n\t\t\t\t\ttextList: [],\r\n\t\t\t\t\tcomparingMarkersActive: 0\r\n\t\t\t\t });\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tconst independentCharts = moreProps.currentCharts.filter(d => d !== 2);\r\n\t\t\t\tif (independentCharts.length > 0) {\r\n\t\t\t\t\tconst first = head(independentCharts);\r\n\r\n\t\t\t\t\tconst morePropsForChart = getMorePropsForChart(moreProps, first);\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tmouseXY: [, mouseY],\r\n\t\t\t\t\t\tchartConfig: { yScale },\r\n\t\t\t\t\t\txAccessor,\r\n\t\t\t\t\t\tcurrentItem,\r\n\t\t\t\t\t} = morePropsForChart;\r\n\r\n\t\t\t\t\tlet yValue = round(yScale.invert(mouseY), 2);\r\n\t\t\t\t\t\r\n\t\t\t\t\t//get the difference between the markers\r\n\t\t\t\t\tif(this.state.yCoordinateList.length == 1){\r\n\t\t\t\t\t\tconst percentDiff = 100 * ( (yValue / this.state.yCoordinateList[0].yValue)-1 );\r\n\r\n\t\t\t\t\t\tconst position = [xAccessor(currentItem), yScale.invert(mouseY)];\r\n\t\t\t\t\t\tconst newText = {\r\n\t\t\t\t\t\t\t...InteractiveText.defaultProps.defaultText,\r\n\t\t\t\t\t\t\tposition,\r\n\t\t\t\t\t\t\ttext: round(percentDiff, 2) + '%',\r\n\t\t\t\t\t\t\t//textFill: (percentDiff >= 0? \"#10A015\" : \"#A01015\"),\r\n\t\t\t\t\t\t\ttextFill: (percentDiff >= 0? \"#50F055\" : \"#FFA5A5\"),\r\n\t\t\t\t\t\t\tbgFill: \"#303030\",\r\n\t\t\t\t\t\t\topacity: 0.2\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tthis.handleChooseTextPosition(newText, percentDiff, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst newMarker = {\r\n\t\t\t\t\t\t...InteractiveYCoordinate.defaultProps.defaultPriceCoordinate,\r\n\t\t\t\t\t\tyValue,\r\n\t\t\t\t\t\tid: this.state.comparingMarkersActive + 1,\r\n\t\t\t\t\t\ttext: (this.state.yCoordinateList.length == 0? \"Start\" : \"End\"),\r\n\t\t\t\t\t\tstroke: (this.state.yCoordinateList.length == 0? \"#6574CD\" : \"#202020\"),\r\n\t\t\t\t\t\ttextFill: (this.state.yCoordinateList.length == 0? \"#6574CD\" : \"#202020\"),\r\n\t\t\t\t\t};\r\n\t\t\t\t\tnewMarker.edge.stroke = (this.state.yCoordinateList.length == 0? \"#6574CD\" : \"#202020\");\r\n\t\t\t\t\tthis.handleChoosePosition(newMarker, morePropsForChart, e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\r\n\thandleChooseTextPosition(text, value) {\r\n\t\t// this.componentWillUnmount();\r\n\t\t// const { id: chartId } = moreProps.chartConfig;\r\n\t\tthis.setState({\r\n\t\t\t[`textList`]: [\r\n\t\t\t\t...this.state[`textList`],\r\n\t\t\t\ttext\r\n\t\t\t],\r\n\t\t\tshowModal: true,\r\n\t\t\ttext: value,\r\n\t\t\tchartId: 1\r\n\t\t});\r\n\t}\r\n\r\n\thandleChoosePosition(marker, moreProps) {\r\n\t\t\r\n\t\t// const { id: chartId } = moreProps.chartConfig;\r\n\t\tthis.setState({\r\n\t\t\t// [`yCoordinateList_${chartId}`]: [\r\n\t\t\t// \t...this.state[`yCoordinateList_${chartId}`],\r\n\t\t\t// \tmarker\r\n\t\t\t// ],\r\n\t\t\t['yCoordinateList']: [\r\n\t\t\t\t...this.state['yCoordinateList'],\r\n\t\t\t\tmarker\r\n\t\t\t],\r\n\t\t\tcomparingMarkersActive: this.state.comparingMarkersActive + 1\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tonDrawComplete(textList, moreProps) {\r\n\t\t// this gets called on\r\n\t\t// 1. draw complete of drawing object\r\n\t\t// 2. drag complete of drawing object\r\n\t\t// const { id: chartId } = moreProps.chartConfig;\r\n\t\r\n\t\tthis.setState({\r\n\t\t  enableInteractiveObject: false,\r\n\t\t  [`textList`]: textList\r\n\t\t});\r\n\t  }\r\n}\r\n\r\nCandleStickChart.propTypes = {\r\n\tdata: PropTypes.array.isRequired,\r\n\twidth: PropTypes.number.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\r\n};\r\n\r\nCandleStickChart.defaultProps = {\r\n\ttype: \"svg\",\r\n};\r\nCandleStickChart = fitWidth(CandleStickChart);\r\n\r\nexport default CandleStickChart;\r\n","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ParseData.jsx",["98","99","100","101","102"],"\r\nimport { tsvParse, csvParse } from  \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\nimport raw from \"raw.macro\";\r\n\r\nfunction parseData(parse) {\r\n\treturn function(d) {\r\n\t\td.date = parse(d.date);\r\n\t\td.open = +d.open;\r\n\t\td.high = +d.high;\r\n\t\td.low = +d.low;\r\n\t\td.close = +d.close;\r\n\t\td.volume = +d.volume;\r\n\r\n\t\treturn d;\r\n\t};\r\n}\r\nfunction parseSeriesJson(json, parse){\r\n\tlet content = json[\"Time Series (Daily)\"];\r\n\tif(!content)\r\n\t\treturn{};\r\n\r\n\tlet series = [];\r\n\t\r\n\tlet aux = Object.keys(content).reverse().forEach(day => {\r\n\t\tseries.push({\r\n\t\t\tdate : parse(day),\r\n\t\t\topen : parseFloat(content[day][\"1. open\"]),\r\n\t\t\thigh : parseFloat(content[day][\"2. high\"]),\r\n\t\t\tlow : parseFloat(content[day][\"3. low\"]),\r\n\t\t\tclose : parseFloat(content[day][\"4. close\"]),\r\n\t\t\tvolume : parseFloat(content[day][\"6. volume\"])\r\n\t\t})\r\n\t});\r\n\treturn {\r\n\t\t'data': series,\r\n\t\t'code': json[\"Meta Data\"][\"2. Symbol\"]\r\n\t};\r\n}\r\n\r\nconst parseDate = timeParse(\"%Y-%m-%d\");\r\n\r\n//OC8AZHP6EZ0ABFIW\r\nexport function getData(apiKey, assetCode) {\r\n\t// const promiseMSFT = fetch(\"https://cdn.rawgit.com/rrag/react-stockcharts/master/docs/data/MSFT.tsv\")\r\n\t// \t.then(response => response.text())\r\n\t// \t.then(data => csvParse(data, parseData(parseDate)))\r\n\t// const dataFile = raw(\"./data.csv\");\r\n\t// const promiseMSFT = csvParse(dataFile, parseData(parseDate))\r\n\t// const data = raw(\"./data.json\");\r\n\t// const promiseMSFT = parseSeriesJson(JSON.parse(data), parseDate);\r\n\tconst promiseMSFT = fetch(\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=\"+assetCode+\".SA&apikey=\"+ apiKey +\"&outputsize=compact\")\r\n\t.then(response => response.text())\r\n\t.then(data => parseSeriesJson(JSON.parse(data), parseDate));\r\n\treturn promiseMSFT;\r\n}\r\n","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\AssetSelector.jsx",["103"],"import React, { Component } from 'react';\r\n\r\nclass AssetSelector extends Component {\r\n    state = { assetCode:'', hasValue : true }\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeAssetValue = this.changeAssetValue.bind(this);\r\n        this.confirmChange = this.confirmChange.bind(this);\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <section style={{float: \"left\"}}>\r\n            <label>Choose an asset:</label>\r\n            <input style={{margin: \"5px\"}} onChange={this.changeAssetValue} type=\"text\" maxLength=\"6\" id=\"input_asset\" />\r\n            <button disabled={this.state.hasValue} className=\"btn-primary\" onClick={this.confirmChange} >Confirm</button> \r\n        </section>);\r\n    }\r\n    changeAssetValue(event){\r\n        let _hasValue = event.target.value == \"\" \r\n        this.setState({assetCode : event.target.value, hasValue : _hasValue});\r\n\r\n    }\r\n\r\n    confirmChange(){\r\n        console.log(this.props.assetSelectedHandler);\r\n        this.props.assetSelectedHandler(this.state.assetCode)\r\n        // this.setState({value: event.target.value});\r\n    }\r\n}\r\n \r\nexport default AssetSelector;","D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\interactiveutils.js",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\charts\\ChartOptions\\ChartOptions.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\transactions\\Transactions.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\transactions\\Transaction.jsx",["104","105"],"import React, { Component } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\nclass Transaction extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n\r\n    formatDate(date){\r\n        if(!date || date.length != 3)\r\n            return \"\";\r\n        \r\n        const dd = (date[2]<10 ? \"0\"+date[2] : date[2]) \r\n        const mm = (date[1]<10 ? \"0\"+date[1] : date[1])\r\n        const yy = date[0]\r\n        return `${dd}/${mm}/${yy}`;\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <tr>\r\n                <td>\r\n                    <span className=\"custom-checkbox\">\r\n                        <input type=\"checkbox\" id=\"checkbox5\" name=\"options[]\" value=\"1\" />\r\n                        <label htmlFor=\"checkbox5\"></label>\r\n                    </span>\r\n                </td>\r\n                    <td>{this.props.asset}</td>\r\n                    <td>{this.props.type}</td>\r\n                    <td>{this.props.price}</td>\r\n                    <td>{this.props.shares_number}</td>\r\n                    <td>{this.formatDate(this.props.date)}</td>\r\n                    <td>\r\n                    <a href=\"#editEmployeeModal\" className=\"edit\"  data-tip=\"Edit\"><i className=\"material-icons\"></i></a>\r\n                    <ReactTooltip />\r\n                    <a href=\"#deleteEmployeeModal\" className=\"delete\"  data-tip=\"Delete\"><i className=\"material-icons\"></i></a>\r\n                    <ReactTooltip />\r\n                </td>\r\n            </tr>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Transaction;",["106","107"],"D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTable.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableTitle\\CrudTableTitle.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableHeader\\CrudTableHeader.jsx",[],"D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudAddModal\\CrudAddModal.jsx",["108","109","110","111","112","113"],"D:\\Trabalho\\React\\smartinvest_ui\\src\\common\\CrudTable\\CrudTableRow\\CrudTableRow.jsx",["114","115"],"import React, { Component } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport \"./CrudTableRow.css\";\r\n\r\nclass CrudTableRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item : props.item\r\n        }\r\n    }\r\n    \r\n    componentDidMount(){\r\n        console.log(\"row didmount\")\r\n        \r\n        if(typeof this.props.itemUpdateHandler === \"function\")\r\n            this.props.itemUpdateHandler(this.state.item).then(updatedItem =>{\r\n                this.setState({\r\n                    item: updatedItem\r\n                })\r\n            })\r\n        \r\n    }\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextState.item != undefined\r\n    }\r\n    render() {\r\n        let fieldValues = []; \r\n        // console.log(this.state.item)\r\n        // Object.entries(this.state.item).forEach(([fieldKey, fieldValue]) => {\r\n        //     fieldValues.push({key: fieldKey,value : fieldValue})\r\n        // });\r\n        return ( \r\n            <tr key={\"row_\"+this.props.itemKey} className=\"crud-table-row\">\r\n                <td>\r\n                    <span className=\"custom-checkbox\">\r\n                        <input className=\"margin10\" type=\"checkbox\" id=\"checkbox5\" name=\"options[]\" value=\"1\" />\r\n                        <label htmlFor=\"checkbox5\"></label>\r\n                    </span>\r\n                </td>\r\n                {this.props.fields.map((field, i) =>{\r\n                    if(field.name)\r\n                        return(\r\n                            <td>{this.state.item[field.name]}</td>\r\n                        )\r\n                    else{\r\n                        console.warning(`Parameter 'name' for field number ${i} not informed`)\r\n                        return (\"\")\r\n                    }\r\n                })}\r\n                <td>\r\n                <a href=\"#editEmployeeModal\" className=\"edit\"  data-tip=\"Edit\"><i className=\"material-icons\"></i></a>\r\n                <ReactTooltip />\r\n                <a href=\"#deleteEmployeeModal\" className=\"delete\"  data-tip=\"Delete\"><i className=\"material-icons\"></i></a>\r\n                <ReactTooltip />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default CrudTableRow\r\n;",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":22},{"ruleId":"120","severity":1,"message":"124","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"125","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":21},{"ruleId":"120","severity":1,"message":"126","line":77,"column":9,"nodeType":"122","messageId":"123","endLine":77,"endColumn":19},{"ruleId":"120","severity":1,"message":"127","line":78,"column":9,"nodeType":"122","messageId":"123","endLine":78,"endColumn":18},{"ruleId":"120","severity":1,"message":"128","line":80,"column":9,"nodeType":"122","messageId":"123","endLine":80,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":225,"column":43,"nodeType":"131","messageId":"132","endLine":225,"endColumn":45},{"ruleId":"129","severity":1,"message":"130","line":245,"column":48,"nodeType":"131","messageId":"132","endLine":245,"endColumn":50},{"ruleId":"129","severity":1,"message":"130","line":246,"column":50,"nodeType":"131","messageId":"132","endLine":246,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":247,"column":52,"nodeType":"131","messageId":"132","endLine":247,"endColumn":54},{"ruleId":"129","severity":1,"message":"130","line":249,"column":65,"nodeType":"131","messageId":"132","endLine":249,"endColumn":67},{"ruleId":"133","severity":1,"message":"134","line":279,"column":4,"nodeType":"135","messageId":"136","endLine":282,"endColumn":5,"fix":"137"},{"ruleId":"120","severity":1,"message":"138","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"139","line":2,"column":20,"nodeType":"122","messageId":"123","endLine":2,"endColumn":28},{"ruleId":"120","severity":1,"message":"140","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":11},{"ruleId":"120","severity":1,"message":"141","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":19},{"ruleId":"120","severity":1,"message":"142","line":25,"column":6,"nodeType":"122","messageId":"123","endLine":25,"endColumn":9},{"ruleId":"129","severity":1,"message":"130","line":20,"column":44,"nodeType":"131","messageId":"132","endLine":20,"endColumn":46},{"ruleId":"120","severity":1,"message":"143","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":19},{"ruleId":"129","severity":1,"message":"144","line":13,"column":33,"nodeType":"131","messageId":"132","endLine":13,"endColumn":35},{"ruleId":"116","replacedBy":"145"},{"ruleId":"118","replacedBy":"146"},{"ruleId":"120","severity":1,"message":"147","line":1,"column":10,"nodeType":"122","messageId":"123","endLine":1,"endColumn":15},{"ruleId":"120","severity":1,"message":"148","line":3,"column":56,"nodeType":"122","messageId":"123","endLine":3,"endColumn":73},{"ruleId":"129","severity":1,"message":"144","line":40,"column":66,"nodeType":"131","messageId":"132","endLine":40,"endColumn":68},{"ruleId":"129","severity":1,"message":"130","line":45,"column":50,"nodeType":"131","messageId":"132","endLine":45,"endColumn":52},{"ruleId":"129","severity":1,"message":"130","line":60,"column":50,"nodeType":"131","messageId":"132","endLine":60,"endColumn":52},{"ruleId":"149","severity":1,"message":"150","line":115,"column":1,"nodeType":"151","messageId":"152","endLine":170,"endColumn":11},{"ruleId":"129","severity":1,"message":"144","line":25,"column":31,"nodeType":"131","messageId":"132","endLine":25,"endColumn":33},{"ruleId":"120","severity":1,"message":"153","line":28,"column":13,"nodeType":"122","messageId":"123","endLine":28,"endColumn":24},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'ChartComponent' is defined but never used.","Identifier","unusedVar","'Asset' is defined but never used.","'TypeChooser' is defined but never used.","'gridHeight' is assigned a value but never used.","'gridWidth' is assigned a value but never used.","'showGrid' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-computed-key","Unnecessarily computed property ['yCoordinateList'] found.","Property","unnecessarilyComputedProperty",{"range":"156","text":"157"},"'tsvParse' is defined but never used.","'csvParse' is defined but never used.","'raw' is defined but never used.","'parseData' is defined but never used.","'aux' is assigned a value but never used.","'timeParse' is defined but never used.","Expected '!==' and instead saw '!='.",["154"],["155"],"'Modal' is defined but never used.","'DialogContentText' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'fieldValues' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[8384,8403],"'yCoordinateList'"]